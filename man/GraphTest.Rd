% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BEAM.R
\name{GraphTest}
\alias{GraphTest}
\title{Graph based differential gene expression test}
\usage{
GraphTest(cds, cth = NULL, major_branch_points = NULL,
  branch_length = round(ncol(cds)/25), cores = 1, verbose = F, ...)
}
\arguments{
\item{cds}{a CellDataSet object upon which to perform this operation}

\item{cth}{a CellTypeHiearchy. When this used, CellType column from the pData of input cds should exist and include cell types from the CellTypeHiearchy}

\item{major_branch_points}{A vector of branch points which lead to relatively long branches.}

\item{branch_length}{Threshold for number of cells which can be used to define as the major branch points}

\item{cores}{the number of cores to be used while testing each gene for differential expression}

\item{verbose}{Whether to generate verbose output}

\item{...}{additional arguments to be passed to differentialGeneTest}
}
\value{
a list with three elements
}
\description{
Identify genes with branch-dependent expression or differential expression based on a graph either from CellTypeHiearchy or the principal graph learnt from DDRTree algorithm
}
\details{
Development processes (potentially other complex biological process like cancer evolution) are often hiearchical branching process (HBP) with multiple branch decisions. 
HBP often can be represented as a graph. Monocle 2 uses DDRTree algorithm which tries to learn the principal graph corresponding the HBP. On the other hand, monocle 2 
also uses algorithms combining tSNE and density peak to identify cell types involved in HBP and thus the continuous development process can be abstracted as a graph in 
terms of CellTypeHiearchy (cth) where the cell type in the cth corresponding to the clusters obtained through monocle 2's cell type classification algorithm through 
classifyCells function. Branch points (or intermediate cell typess) in the principal graph (or cth) as well as tip cells (or tip cell type) are then detected and used 
to build a helper graph which only involved the branch points (intermediate cells) and tip cells (tip cell types). For the first case, this function will then perform 
on only the cells traverse in the original principal graph from the starting root cell (or a higher level branch point) to each of the branch point's neighbor cell as 
recorded in the helper graph. Similarly, for the second case, this function will perform two-group test on only the cell types traverse in the original cth from root 
cell type (or a higher level intermediate cell type)) to each of the intermediate cell types' neighbor cell type as recorded in the helper graph. In addition, pseudotime 
test or group-test on from cells based on each trunk of the helper cell will be performed. Finally, we will take each branch point (intermediate cell type) 
on the helper function and collect all the cells downstream from each direction of the branch point (intermediate cell) as a single branch (group) and perform a BEAM test
(group test) as before. This test is similar to what we implemented before. We hope to detect genes which are repurposed at different developmental stage by performing 
BEAM, pseudotime or group test conditioned on the graph as well as comparing those test results. Note that we use the helper graph to identify the starting nodes or end 
nodes which is used to retrieve cells based on the original principal graph or cth.

\code{GraphTest()} Takes a CellDataSet and either a CellTypeHiearchy or a vector specified major branch points (with large branch coming off).
If a CellTypeHiearchy is provided, the function will perform graph based group test based on the CellTypeHiearchy. 
If no CellTypeHiearchy is provided but major branch points are provided, the function will perform graph based BEAM test and pseudotime test based on the learnt principal graph at those major branch points. 
If neither CellTypeHiearchy or major branch points provide, the function will first find the major branch points based on a branch length threshold and then perform BEAM test and pseudotime test based on the learnt principal graph.

\code{GraphTest()} returns a list of three elements: 
(1) The first is the helper graph created for graph based test based on CellTypeHiearchy or the principal graph. 
(2) The second is a list of the BEAM (including pseudotime) test (or two-group test) for the list of major branch points (or intermediate states) on the principal graph (or CellTypeHiearchy). 
Each element of the list contains a data.frame includes the test result and is ordered as that of the vertex of the helper graph. 
(3) the third one is the result of the graph-based BEAM (including pseudotime) test or two-group test for the list of major branch points (or intermediate states) based on the helper graph. 
The data is stored in a matrix  of list where each row and column corresponding to an vertex from the helper graph. Diagonal element stores the corresponding BEAM test corresponding to the vertex from the helper graph.
And the off-diagonal element corresponding to the test result based on cells transition from the cell or (cell type) to another cell (cell type), both corresponding to the helper graph, in the full CDS.
}
